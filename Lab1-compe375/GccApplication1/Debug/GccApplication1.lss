
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000578  000005ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000578  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000630  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001196  00000000  00000000  000006b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009ac  00000000  00000000  00001846  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000517  00000000  00000000  000021f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  0000270c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c7  00000000  00000000  00002780  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000021b  00000000  00000000  00002c47  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002e62  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
   4:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
   8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
   c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  10:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  14:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  18:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  1c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  20:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  24:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  28:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  2c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  30:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  34:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  38:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  3c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  40:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  44:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  48:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  4c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  50:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  54:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  58:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  5c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  60:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  64:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  68:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  6c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  70:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  74:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  78:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  7c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  80:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  84:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  88:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  8c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  90:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  94:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  98:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  9c:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  a0:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  a4:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  a8:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  ac:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  b0:	0c 94 ca 00 	jmp	0x194	; 0x194 <__bad_interrupt>
  b4:	a6 02       	muls	r26, r22
  b6:	a8 02       	muls	r26, r24
  b8:	a8 02       	muls	r26, r24
  ba:	a8 02       	muls	r26, r24
  bc:	a8 02       	muls	r26, r24
  be:	a8 02       	muls	r26, r24
  c0:	a8 02       	muls	r26, r24
  c2:	a8 02       	muls	r26, r24
  c4:	a8 02       	muls	r26, r24
  c6:	a8 02       	muls	r26, r24
  c8:	a8 02       	muls	r26, r24
  ca:	a8 02       	muls	r26, r24
  cc:	a8 02       	muls	r26, r24
  ce:	a8 02       	muls	r26, r24
  d0:	a8 02       	muls	r26, r24
  d2:	a8 02       	muls	r26, r24
  d4:	99 02       	muls	r25, r25
  d6:	24 02       	muls	r18, r20
  d8:	31 02       	muls	r19, r17
  da:	3e 02       	muls	r19, r30
  dc:	4b 02       	muls	r20, r27
  de:	58 02       	muls	r21, r24
  e0:	65 02       	muls	r22, r21
  e2:	72 02       	muls	r23, r18
  e4:	7f 02       	muls	r23, r31
  e6:	8c 02       	muls	r24, r28
  e8:	a8 02       	muls	r26, r24
  ea:	a8 02       	muls	r26, r24
  ec:	a8 02       	muls	r26, r24
  ee:	a8 02       	muls	r26, r24
  f0:	a8 02       	muls	r26, r24
  f2:	a8 02       	muls	r26, r24
  f4:	a8 02       	muls	r26, r24
  f6:	37 01       	movw	r6, r14
  f8:	3e 01       	movw	r6, r28
  fa:	49 01       	movw	r8, r18
  fc:	54 01       	movw	r10, r8
  fe:	5c 01       	movw	r10, r24
 100:	61 01       	movw	r12, r2
 102:	6a 01       	movw	r12, r20
 104:	71 01       	movw	r14, r2
 106:	7c 01       	movw	r14, r24
 108:	83 01       	movw	r16, r6
 10a:	8e 01       	movw	r16, r28
 10c:	97 01       	movw	r18, r14
 10e:	a2 01       	movw	r20, r4
 110:	a9 01       	movw	r20, r18
 112:	b0 01       	movw	r22, r0
 114:	b9 01       	movw	r22, r18
 116:	c4 01       	movw	r24, r8
 118:	cf 01       	movw	r24, r30
 11a:	d8 01       	movw	r26, r16
 11c:	e1 01       	movw	r28, r2
 11e:	e6 01       	movw	r28, r12
 120:	ef 01       	movw	r28, r30
 122:	fa 01       	movw	r30, r20
 124:	03 02       	muls	r16, r19
 126:	0e 02       	muls	r16, r30
 128:	19 02       	muls	r17, r25
 12a:	a8 02       	muls	r26, r24
 12c:	a8 02       	muls	r26, r24
 12e:	a8 02       	muls	r26, r24
 130:	a8 02       	muls	r26, r24
 132:	a8 02       	muls	r26, r24
 134:	a8 02       	muls	r26, r24
 136:	37 01       	movw	r6, r14
 138:	3e 01       	movw	r6, r28
 13a:	49 01       	movw	r8, r18
 13c:	54 01       	movw	r10, r8
 13e:	5c 01       	movw	r10, r24
 140:	61 01       	movw	r12, r2
 142:	6a 01       	movw	r12, r20
 144:	71 01       	movw	r14, r2
 146:	7c 01       	movw	r14, r24
 148:	83 01       	movw	r16, r6
 14a:	8e 01       	movw	r16, r28
 14c:	97 01       	movw	r18, r14
 14e:	a2 01       	movw	r20, r4
 150:	a9 01       	movw	r20, r18
 152:	b0 01       	movw	r22, r0
 154:	b9 01       	movw	r22, r18
 156:	c4 01       	movw	r24, r8
 158:	cf 01       	movw	r24, r30
 15a:	d8 01       	movw	r26, r16
 15c:	e1 01       	movw	r28, r2
 15e:	e6 01       	movw	r28, r12
 160:	ef 01       	movw	r28, r30
 162:	fa 01       	movw	r30, r20
 164:	03 02       	muls	r16, r19
 166:	0e 02       	muls	r16, r30
 168:	19 02       	muls	r17, r25

0000016a <__ctors_end>:
 16a:	11 24       	eor	r1, r1
 16c:	1f be       	out	0x3f, r1	; 63
 16e:	cf ef       	ldi	r28, 0xFF	; 255
 170:	d8 e0       	ldi	r29, 0x08	; 8
 172:	de bf       	out	0x3e, r29	; 62
 174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
 176:	11 e0       	ldi	r17, 0x01	; 1
 178:	a0 e0       	ldi	r26, 0x00	; 0
 17a:	b1 e0       	ldi	r27, 0x01	; 1
 17c:	e8 e7       	ldi	r30, 0x78	; 120
 17e:	f5 e0       	ldi	r31, 0x05	; 5
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
 182:	05 90       	lpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a2 31       	cpi	r26, 0x12	; 18
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>
 18c:	0e 94 12 01 	call	0x224	; 0x224 <main>
 190:	0c 94 ba 02 	jmp	0x574	; 0x574 <_exit>

00000194 <__bad_interrupt>:
 194:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000198 <dot>:
#include <util/delay.h>
#include <string.h>

void dot(void)
{
	PORTB |= (1<<PORTB5); //Set port bit B5 to 1 to turn on the LED
 198:	85 b1       	in	r24, 0x05	; 5
 19a:	80 62       	ori	r24, 0x20	; 32
 19c:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19e:	2f ef       	ldi	r18, 0xFF	; 255
 1a0:	83 ec       	ldi	r24, 0xC3	; 195
 1a2:	99 e0       	ldi	r25, 0x09	; 9
 1a4:	21 50       	subi	r18, 0x01	; 1
 1a6:	80 40       	sbci	r24, 0x00	; 0
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <dot+0xc>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <dot+0x16>
 1ae:	00 00       	nop
	_delay_ms(200); //delay 200ms for on time
	PORTB &= ~(1<<PORTB5); //Clear port bit B5 to 0 to turn off the LED
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	8f 7d       	andi	r24, 0xDF	; 223
 1b4:	85 b9       	out	0x05, r24	; 5
 1b6:	2f ef       	ldi	r18, 0xFF	; 255
 1b8:	83 ec       	ldi	r24, 0xC3	; 195
 1ba:	99 e0       	ldi	r25, 0x09	; 9
 1bc:	21 50       	subi	r18, 0x01	; 1
 1be:	80 40       	sbci	r24, 0x00	; 0
 1c0:	90 40       	sbci	r25, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <dot+0x24>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <dot+0x2e>
 1c6:	00 00       	nop
 1c8:	08 95       	ret

000001ca <dash>:
	_delay_ms(200); //delay 200ms for between same part of letters
}
void dash(void)
{
	PORTB |= (1<<PORTB5); //Set port bit B5 to 1 to turn on the LED
 1ca:	85 b1       	in	r24, 0x05	; 5
 1cc:	80 62       	ori	r24, 0x20	; 32
 1ce:	85 b9       	out	0x05, r24	; 5
 1d0:	2f ef       	ldi	r18, 0xFF	; 255
 1d2:	8b e4       	ldi	r24, 0x4B	; 75
 1d4:	9d e1       	ldi	r25, 0x1D	; 29
 1d6:	21 50       	subi	r18, 0x01	; 1
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	90 40       	sbci	r25, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <dash+0xc>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <dash+0x16>
 1e0:	00 00       	nop
	_delay_ms(600); //delay 600ms
	PORTB &= ~(1<<PORTB5); //Clear port bit B5 to 0 to turn off the LED
 1e2:	85 b1       	in	r24, 0x05	; 5
 1e4:	8f 7d       	andi	r24, 0xDF	; 223
 1e6:	85 b9       	out	0x05, r24	; 5
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	83 ec       	ldi	r24, 0xC3	; 195
 1ec:	99 e0       	ldi	r25, 0x09	; 9
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <dash+0x24>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <dash+0x2e>
 1f8:	00 00       	nop
 1fa:	08 95       	ret

000001fc <spclttr>:
 1fc:	2f ef       	ldi	r18, 0xFF	; 255
 1fe:	87 e8       	ldi	r24, 0x87	; 135
 200:	93 e1       	ldi	r25, 0x13	; 19
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <spclttr+0x6>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <spclttr+0x10>
 20c:	00 00       	nop
 20e:	08 95       	ret

00000210 <spcwrd>:
 210:	2f ef       	ldi	r18, 0xFF	; 255
 212:	87 e9       	ldi	r24, 0x97	; 151
 214:	9a e3       	ldi	r25, 0x3A	; 58
 216:	21 50       	subi	r18, 0x01	; 1
 218:	80 40       	sbci	r24, 0x00	; 0
 21a:	90 40       	sbci	r25, 0x00	; 0
 21c:	e1 f7       	brne	.-8      	; 0x216 <spcwrd+0x6>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <spcwrd+0x10>
 220:	00 00       	nop
 222:	08 95       	ret

00000224 <main>:
	_delay_ms(1200); //delay 1200ms (alread do 200ms as default for space between same part so just adding 1200ms more instead

}

int main(void)
{
 224:	cf 93       	push	r28
 226:	df 93       	push	r29
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
 22c:	62 97       	sbiw	r28, 0x12	; 18
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	f8 94       	cli
 232:	de bf       	out	0x3e, r29	; 62
 234:	0f be       	out	0x3f, r0	; 63
 236:	cd bf       	out	0x3d, r28	; 61
	
	char str[] = "TRI BUI 828135536";
 238:	82 e1       	ldi	r24, 0x12	; 18
 23a:	e0 e0       	ldi	r30, 0x00	; 0
 23c:	f1 e0       	ldi	r31, 0x01	; 1
 23e:	de 01       	movw	r26, r28
 240:	11 96       	adiw	r26, 0x01	; 1
 242:	01 90       	ld	r0, Z+
 244:	0d 92       	st	X+, r0
 246:	8a 95       	dec	r24
 248:	e1 f7       	brne	.-8      	; 0x242 <main+0x1e>
	
	/* Replace with your application code */
	DDRB |= (1<<DDB5); //0x20 (hex) // Set port bit B5 in data direction register to 1: an OUTput
 24a:	84 b1       	in	r24, 0x04	; 4
 24c:	80 62       	ori	r24, 0x20	; 32
 24e:	84 b9       	out	0x04, r24	; 4
	while(1){
		for(int i = 0; str[i] != '\0'; i++)
 250:	00 e0       	ldi	r16, 0x00	; 0
 252:	10 e0       	ldi	r17, 0x00	; 0
 254:	7f c1       	rjmp	.+766    	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
		{
			switch(str[i])
 256:	8e 2f       	mov	r24, r30
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	fc 01       	movw	r30, r24
 25c:	b0 97       	sbiw	r30, 0x20	; 32
 25e:	eb 35       	cpi	r30, 0x5B	; 91
 260:	f1 05       	cpc	r31, r1
 262:	08 f0       	brcs	.+2      	; 0x266 <main+0x42>
 264:	75 c1       	rjmp	.+746    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 266:	e6 5a       	subi	r30, 0xA6	; 166
 268:	ff 4f       	sbci	r31, 0xFF	; 255
 26a:	0c 94 b4 02 	jmp	0x568	; 0x568 <__tablejump2__>
			{
				case 'A':
				case 'a':
				dot();dash();spclttr();
 26e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 272:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 276:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 27a:	6a c1       	rjmp	.+724    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'B':
				case 'b':
				dash();dot();dot();dot();spclttr();
 27c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 280:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 284:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 288:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 28c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 290:	5f c1       	rjmp	.+702    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'C':
				case 'c':
				dash();dot();dash();dot();spclttr();
 292:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 296:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 29a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 29e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2a2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 2a6:	54 c1       	rjmp	.+680    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'D':
				case 'd':
				dash();dot();dot();spclttr();
 2a8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 2ac:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2b0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2b4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				
				case 'E':
				case 'e':
				dot();spclttr();
 2b8:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2bc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 2c0:	47 c1       	rjmp	.+654    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'F':
				case 'f':
				dot();dot();dash();dot();
 2c2:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2c6:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2ca:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 2ce:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
				break;
 2d2:	3e c1       	rjmp	.+636    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'G':
				case 'g':
				dash();dash();dot();
 2d4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 2d8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 2dc:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
				break;
 2e0:	37 c1       	rjmp	.+622    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'H':
				case 'h':
				dot();dot();dot();dot();spclttr();
 2e2:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2e6:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2ea:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2ee:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2f2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 2f6:	2c c1       	rjmp	.+600    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'I':
				case 'i':
				dot();dot();spclttr();
 2f8:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 2fc:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 300:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 304:	25 c1       	rjmp	.+586    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'J':
				case 'j':
				dot();dash();dash();dash();spclttr();
 306:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 30a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 30e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 312:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 316:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 31a:	1a c1       	rjmp	.+564    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'K':
				case 'k':
				dash();dot();dash();spclttr();
 31c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 320:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 324:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 328:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 32c:	11 c1       	rjmp	.+546    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'L':
				case 'l':
				dot();dash();dot();dot();spclttr();
 32e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 332:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 336:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 33a:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 33e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 342:	06 c1       	rjmp	.+524    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'M':
				case 'm':
				dash();dash();spclttr();
 344:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 348:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 34c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 350:	ff c0       	rjmp	.+510    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'N':
				case 'n':
				dash();dot();spclttr();
 352:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 356:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 35a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 35e:	f8 c0       	rjmp	.+496    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'O':
				case 'o':
				dash();dash();dash();spclttr();
 360:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 364:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 368:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 36c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 370:	ef c0       	rjmp	.+478    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'P':
				case 'p':
				dot();dash();dash();dot();spclttr();
 372:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 376:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 37a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 37e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 382:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 386:	e4 c0       	rjmp	.+456    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'Q':
				case 'q':
				dash();dash();dot();dash();spclttr();
 388:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 38c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 390:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 394:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 398:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 39c:	d9 c0       	rjmp	.+434    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'R':
				case 'r':
				dot();dash();dot();spclttr();
 39e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3a2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 3a6:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 3ae:	d0 c0       	rjmp	.+416    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'S':
				case 's':
				dot();dot();dot();spclttr();
 3b0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3b4:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3b8:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3bc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 3c0:	c7 c0       	rjmp	.+398    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'T':
				case 't':
				dash();spclttr();
 3c2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 3c6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 3ca:	c2 c0       	rjmp	.+388    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'U':
				case 'u':
				dot();dot();dash();spclttr();
 3cc:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3d0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3d4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 3d8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 3dc:	b9 c0       	rjmp	.+370    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'V':
				case 'v':
				dot();dot();dot();dash();spclttr();
 3de:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3e2:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3e6:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3ea:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 3ee:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 3f2:	ae c0       	rjmp	.+348    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'W':
				case 'w':
				dot();dash();dash();spclttr();
 3f4:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 3f8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 3fc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 400:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 404:	a5 c0       	rjmp	.+330    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'X':
				case 'x':
				dash();dot();dot();dash();spclttr();
 406:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 40a:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 40e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 412:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 416:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 41a:	9a c0       	rjmp	.+308    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'Y' :
				case 'y':
				dash();dot();dash();dash();spclttr();
 41c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 420:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 424:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 428:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 42c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 430:	8f c0       	rjmp	.+286    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case 'Z':
				case 'z':
				dash();dash();dot();dot();spclttr();
 432:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 436:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 43a:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 43e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 442:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 446:	84 c0       	rjmp	.+264    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '1':
				dot();dash();dash();dash();dash();spclttr();
 448:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 44c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 450:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 454:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 458:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 45c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 460:	77 c0       	rjmp	.+238    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '2':
				dot();dot();dash();dash();dash();spclttr();
 462:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 466:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 46a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 46e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 472:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 476:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 47a:	6a c0       	rjmp	.+212    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '3':
				dot();dot();dot();dash();dash();spclttr();
 47c:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 480:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 484:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 488:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 48c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 490:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 494:	5d c0       	rjmp	.+186    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '4':
				dot();dot();dot();dot();dash();spclttr();
 496:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 49a:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 49e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4a2:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4a6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 4aa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 4ae:	50 c0       	rjmp	.+160    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '5':
				dot();dot();dot();dot();dot();spclttr();
 4b0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4b4:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4b8:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4bc:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4c0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4c4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 4c8:	43 c0       	rjmp	.+134    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '6':
				dash();dot();dot();dot();dot();spclttr();
 4ca:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 4ce:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4d2:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4d6:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4da:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4de:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 4e2:	36 c0       	rjmp	.+108    	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '7':
				dash();dash();dot();dot();dot();spclttr();
 4e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 4e8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 4ec:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4f0:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4f4:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 4f8:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 4fc:	29 c0       	rjmp	.+82     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '8':
				dash();dash();dash();dot();dot();spclttr();
 4fe:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 502:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 506:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 50a:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 50e:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 512:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 516:	1c c0       	rjmp	.+56     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '9':
				dash();dash();dash();dash();dot();spclttr();
 518:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 51c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 520:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 524:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 528:	0e 94 cc 00 	call	0x198	; 0x198 <dot>
 52c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 530:	0f c0       	rjmp	.+30     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case '0':
				dash();dash();dash();dash();dash();spclttr();
 532:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 536:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 53a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 53e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 542:	0e 94 e5 00 	call	0x1ca	; 0x1ca <dash>
 546:	0e 94 fe 00 	call	0x1fc	; 0x1fc <spclttr>
				break;
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
				
				case ' ':
				spcwrd();
 54c:	0e 94 08 01 	call	0x210	; 0x210 <spcwrd>
	char str[] = "TRI BUI 828135536";
	
	/* Replace with your application code */
	DDRB |= (1<<DDB5); //0x20 (hex) // Set port bit B5 in data direction register to 1: an OUTput
	while(1){
		for(int i = 0; str[i] != '\0'; i++)
 550:	0f 5f       	subi	r16, 0xFF	; 255
 552:	1f 4f       	sbci	r17, 0xFF	; 255
 554:	e1 e0       	ldi	r30, 0x01	; 1
 556:	f0 e0       	ldi	r31, 0x00	; 0
 558:	ec 0f       	add	r30, r28
 55a:	fd 1f       	adc	r31, r29
 55c:	e0 0f       	add	r30, r16
 55e:	f1 1f       	adc	r31, r17
 560:	e0 81       	ld	r30, Z
 562:	e1 11       	cpse	r30, r1
 564:	78 ce       	rjmp	.-784    	; 0x256 <main+0x32>
 566:	74 ce       	rjmp	.-792    	; 0x250 <main+0x2c>

00000568 <__tablejump2__>:
 568:	ee 0f       	add	r30, r30
 56a:	ff 1f       	adc	r31, r31
 56c:	05 90       	lpm	r0, Z+
 56e:	f4 91       	lpm	r31, Z
 570:	e0 2d       	mov	r30, r0
 572:	09 94       	ijmp

00000574 <_exit>:
 574:	f8 94       	cli

00000576 <__stop_program>:
 576:	ff cf       	rjmp	.-2      	; 0x576 <__stop_program>
